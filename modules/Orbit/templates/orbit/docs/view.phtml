<?php
/**
 * Orbit CMS - Documentation View Template
 *
 * @var \Orbit\Entity\Content $content
 * @var array $navigation
 * @var array $breadcrumbs
 * @var string $lang
 * @var bool $searchEnabled
 */

$this->layout('layout::home', [
    'title' => $content->getTitle() . ' - Dokumentácia'
]);

$this->headTitle($content->getTitle() . ' - Dokumentácia');
$this->headMeta()->appendName('description', $content->getExcerpt());
?>

<div class="docs-container">
    <!-- Sidebar Navigation -->
    <aside class="docs-sidebar">
        <div class="docs-nav">
            <h3>Dokumentácia</h3>
            
            <?php if ($searchEnabled): ?>
            <div class="docs-search">
                <input type="search" 
                       id="docs-search" 
                       placeholder="Hľadať v dokumentácii..."
                       class="form-control">
                <div id="search-results" class="search-results"></div>
            </div>
            <?php endif; ?>
            
            <nav class="docs-navigation">
                <?php foreach ($navigation as $section => $items): ?>
                <div class="nav-section">
                    <h4><?= $this->escapeHtml($section) ?></h4>
                    <ul class="nav-items">
                        <?php foreach ($items as $item): ?>
                        <li class="nav-item">
                            <a href="<?= $this->escapeHtmlAttr($item['url']) ?>"
                               class="nav-link <?= $item['slug'] === substr($content->getSlug(), 3) ? 'active' : '' ?>">
                                <?= $this->escapeHtml($item['title']) ?>
                            </a>
                        </li>
                        <?php endforeach; ?>
                    </ul>
                </div>
                <?php endforeach; ?>
            </nav>
        </div>
    </aside>

    <!-- Main Content -->
    <main class="docs-content">
        <!-- Breadcrumbs -->
        <?php if (!empty($breadcrumbs)): ?>
        <nav aria-label="breadcrumb" class="docs-breadcrumbs">
            <ol class="breadcrumb">
                <?php foreach ($breadcrumbs as $crumb): ?>
                <li class="breadcrumb-item <?= isset($crumb['active']) ? 'active' : '' ?>">
                    <?php if (isset($crumb['active'])): ?>
                        <?= $this->escapeHtml($crumb['title']) ?>
                    <?php else: ?>
                        <a href="<?= $this->escapeHtmlAttr($crumb['url']) ?>">
                            <?= $this->escapeHtml($crumb['title']) ?>
                        </a>
                    <?php endif; ?>
                </li>
                <?php endforeach; ?>
            </ol>
        </nav>
        <?php endif; ?>

        <!-- Article Content -->
        <article class="docs-article">
            <header class="docs-header">
                <h1><?= $this->escapeHtml($content->getTitle()) ?></h1>
                
                <div class="docs-meta">
                    <?php if ($content->getCategory()): ?>
                    <span class="docs-category">
                        <i class="icon-folder"></i>
                        <a href="<?= $this->escapeHtmlAttr($content->getCategory()->getUrl()) ?>">
                            <?= $this->escapeHtml($content->getCategory()->getName()) ?>
                        </a>
                    </span>
                    <?php endif; ?>
                    
                    <span class="docs-updated">
                        <i class="icon-clock"></i>
                        Posledná aktualizácia: <?= $content->getUpdatedAt()->format('d.m.Y') ?>
                    </span>
                </div>
            </header>

            <!-- Rendered Content -->
            <div class="docs-body prose">
                <?= $content->getRenderedContent() ?>
            </div>

            <!-- Tags -->
            <?php if (!empty($content->getTags())): ?>
            <footer class="docs-tags">
                <h4>Tagy:</h4>
                <div class="tag-list">
                    <?php foreach ($content->getTags() as $tag): ?>
                    <a href="<?= $this->escapeHtmlAttr($tag->getUrl()) ?>" 
                       class="tag"
                       style="background-color: <?= $this->escapeHtmlAttr($tag->getColor()) ?>">
                        <?= $this->escapeHtml($tag->getName()) ?>
                    </a>
                    <?php endforeach; ?>
                </div>
            </footer>
            <?php endif; ?>
        </article>
    </main>

    <!-- Table of Contents -->
    <aside class="docs-toc">
        <div class="toc-container">
            <h4>Obsah</h4>
            <nav id="table-of-contents" class="toc-nav">
                <!-- TOC will be generated by JavaScript -->
            </nav>
        </div>
    </aside>
</div>

<!-- Search JavaScript -->
<?php if ($searchEnabled): ?>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('docs-search');
    const searchResults = document.getElementById('search-results');
    let searchTimeout;

    searchInput.addEventListener('input', function() {
        clearTimeout(searchTimeout);
        const query = this.value.trim();
        
        if (query.length < 3) {
            searchResults.innerHTML = '';
            searchResults.style.display = 'none';
            return;
        }
        
        searchTimeout = setTimeout(() => {
            fetch(`/api/orbit/search?q=${encodeURIComponent(query)}&type=docs`)
                .then(response => response.json())
                .then(data => {
                    displaySearchResults(data.results || []);
                })
                .catch(error => {
                    console.error('Search error:', error);
                });
        }, 300);
    });

    function displaySearchResults(results) {
        if (results.length === 0) {
            searchResults.innerHTML = '<div class="no-results">Žiadne výsledky</div>';
        } else {
            const html = results.map(result => `
                <div class="search-result">
                    <a href="${result.url}" class="result-title">${result.title}</a>
                    <div class="result-snippet">${result.snippet || ''}</div>
                </div>
            `).join('');
            searchResults.innerHTML = html;
        }
        searchResults.style.display = 'block';
    }

    // Hide search results when clicking outside
    document.addEventListener('click', function(e) {
        if (!searchInput.contains(e.target) && !searchResults.contains(e.target)) {
            searchResults.style.display = 'none';
        }
    });
});

// Generate Table of Contents
document.addEventListener('DOMContentLoaded', function() {
    const content = document.querySelector('.docs-body');
    const toc = document.getElementById('table-of-contents');
    const headings = content.querySelectorAll('h1, h2, h3, h4, h5, h6');
    
    if (headings.length === 0) {
        document.querySelector('.docs-toc').style.display = 'none';
        return;
    }
    
    const tocList = document.createElement('ul');
    tocList.className = 'toc-list';
    
    headings.forEach((heading, index) => {
        const id = `heading-${index}`;
        heading.id = id;
        
        const li = document.createElement('li');
        li.className = `toc-item toc-${heading.tagName.toLowerCase()}`;
        
        const link = document.createElement('a');
        link.href = `#${id}`;
        link.textContent = heading.textContent;
        link.className = 'toc-link';
        
        li.appendChild(link);
        tocList.appendChild(li);
    });
    
    toc.appendChild(tocList);
});
</script>
<?php endif; ?>

<style>
.docs-container {
    display: grid;
    grid-template-columns: 250px 1fr 200px;
    gap: 2rem;
    max-width: 1400px;
    margin: 0 auto;
    padding: 2rem;
}

.docs-sidebar {
    position: sticky;
    top: 2rem;
    height: fit-content;
}

.docs-search {
    margin-bottom: 1.5rem;
    position: relative;
}

.search-results {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: white;
    border: 1px solid #ddd;
    border-radius: 4px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    max-height: 300px;
    overflow-y: auto;
    z-index: 1000;
    display: none;
}

.search-result {
    padding: 0.75rem;
    border-bottom: 1px solid #eee;
}

.search-result:last-child {
    border-bottom: none;
}

.result-title {
    font-weight: 600;
    color: #2563eb;
    text-decoration: none;
}

.result-snippet {
    font-size: 0.875rem;
    color: #666;
    margin-top: 0.25rem;
}

.docs-navigation .nav-section {
    margin-bottom: 1.5rem;
}

.docs-navigation h4 {
    font-size: 0.875rem;
    font-weight: 600;
    color: #374151;
    margin-bottom: 0.5rem;
}

.nav-items {
    list-style: none;
    padding: 0;
    margin: 0;
}

.nav-link {
    display: block;
    padding: 0.375rem 0.75rem;
    color: #6b7280;
    text-decoration: none;
    border-radius: 4px;
    font-size: 0.875rem;
}

.nav-link:hover,
.nav-link.active {
    background-color: #f3f4f6;
    color: #1f2937;
}

.docs-content {
    min-width: 0;
}

.docs-breadcrumbs {
    margin-bottom: 1.5rem;
}

.docs-header {
    margin-bottom: 2rem;
}

.docs-meta {
    display: flex;
    gap: 1rem;
    margin-top: 0.5rem;
    font-size: 0.875rem;
    color: #6b7280;
}

.docs-body {
    line-height: 1.7;
}

.docs-toc {
    position: sticky;
    top: 2rem;
    height: fit-content;
}

.toc-container {
    background: #f9fafb;
    border-radius: 8px;
    padding: 1rem;
}

.toc-list {
    list-style: none;
    padding: 0;
    margin: 0;
}

.toc-item {
    margin-bottom: 0.25rem;
}

.toc-link {
    display: block;
    padding: 0.25rem 0;
    color: #6b7280;
    text-decoration: none;
    font-size: 0.875rem;
}

.toc-h2 { padding-left: 0.5rem; }
.toc-h3 { padding-left: 1rem; }
.toc-h4 { padding-left: 1.5rem; }

.tag-list {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
}

.tag {
    display: inline-block;
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    color: white;
    text-decoration: none;
    font-size: 0.875rem;
}

@media (max-width: 1024px) {
    .docs-container {
        grid-template-columns: 1fr;
    }
    
    .docs-sidebar,
    .docs-toc {
        display: none;
    }
}

/* Prism.js Syntax Highlighting Styles */
.docs-body pre {
    background: #f8f9fa;
    border: 1px solid #e9ecef;
    border-radius: 0.375rem;
    padding: 1rem;
    overflow-x: auto;
    margin: 1rem 0;
    position: relative;
}

.docs-body pre code {
    background: none;
    padding: 0;
    border: none;
    border-radius: 0;
    font-size: 0.875rem;
    line-height: 1.5;
}

.docs-body code {
    background: #f8f9fa;
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    font-size: 0.875rem;
    color: #e83e8c;
    border: 1px solid #e9ecef;
}

/* Fix pre Prism.js tokeny - odstráň background z operátorov */
.docs-body pre code .token.operator,
.docs-body pre code .token.punctuation,
.docs-body pre code .token.delimiter,
.docs-body pre code .token.important,
.docs-body pre code .token.atrule,
.docs-body pre code .token.keyword,
.docs-body pre code .token.rule {
    background: none !important;
    background-color: transparent !important;
}

/* Všetky tokeny v code blokoch nemajú mať background */
.docs-body pre code .token {
    background: none !important;
    background-color: transparent !important;
}

/* Fix pre H1 warning - špecifikuj font-size pre h1 v sekciách */
.docs-body h1 {
    font-size: 2.5rem;
    margin: 2rem 0 1rem 0;
    font-weight: 600;
    line-height: 1.2;
}

.docs-body h2 {
    font-size: 2rem;
    margin: 1.5rem 0 1rem 0;
    font-weight: 600;
}

.docs-body h3 {
    font-size: 1.5rem;
    margin: 1.25rem 0 0.75rem 0;
    font-weight: 600;
}

/* Copy button for code blocks */
.code-block-wrapper {
    position: relative;
}

.copy-code-btn {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    background: #6c757d;
    color: white;
    border: none;
    border-radius: 0.25rem;
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
    cursor: pointer;
    opacity: 0;
    transition: opacity 0.2s;
}

.code-block-wrapper:hover .copy-code-btn {
    opacity: 1;
}

.copy-code-btn:hover {
    background: #5a6268;
}

.copy-code-btn.copied {
    background: #28a745;
}
</style>

<!-- Prism.js CSS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css" rel="stylesheet" media="(prefers-color-scheme: dark)">
<link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/toolbar/prism-toolbar.min.css" rel="stylesheet">

<!-- Prism.js JavaScript - správne poradie pluginov -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-core.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/autoloader/prism-autoloader.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/toolbar/prism-toolbar.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/copy-to-clipboard/prism-copy-to-clipboard.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js"></script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initialize Prism.js
    if (typeof Prism !== 'undefined') {
        // Configure Prism autoloader
        Prism.plugins.autoloader.languages_path = 'https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/';

        // Add copy buttons to code blocks
        document.querySelectorAll('pre code').forEach(function(block) {
            const pre = block.parentElement;

            // Wrap in container for positioning
            if (!pre.parentElement.classList.contains('code-block-wrapper')) {
                const wrapper = document.createElement('div');
                wrapper.className = 'code-block-wrapper';
                pre.parentElement.insertBefore(wrapper, pre);
                wrapper.appendChild(pre);

                // Add copy button
                const copyBtn = document.createElement('button');
                copyBtn.className = 'copy-code-btn';
                copyBtn.textContent = 'Copy';
                copyBtn.addEventListener('click', function() {
                    navigator.clipboard.writeText(block.textContent).then(function() {
                        copyBtn.textContent = 'Copied!';
                        copyBtn.classList.add('copied');
                        setTimeout(function() {
                            copyBtn.textContent = 'Copy';
                            copyBtn.classList.remove('copied');
                        }, 2000);
                    });
                });
                wrapper.appendChild(copyBtn);
            }
        });

        // Re-highlight all code blocks
        Prism.highlightAll();
    }

    // Add language labels to code blocks
    document.querySelectorAll('pre[class*="language-"]').forEach(function(pre) {
        const className = pre.className;
        const match = className.match(/language-(\w+)/);
        if (match) {
            const language = match[1];
            const label = document.createElement('div');
            label.className = 'code-language-label';
            label.textContent = language.toUpperCase();
            label.style.cssText = `
                position: absolute;
                top: 0;
                left: 0;
                background: #6c757d;
                color: white;
                padding: 0.25rem 0.5rem;
                font-size: 0.75rem;
                border-radius: 0 0 0.25rem 0;
                font-weight: 600;
            `;
            pre.style.position = 'relative';
            pre.appendChild(label);
        }
    });
});
</script>
